#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import YouTubeDownloader

def test_size_display():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞...")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
        downloader = YouTubeDownloader()
        print("‚úÖ YouTubeDownloader —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞
        test_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
        print(f"üìé –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: {test_url}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—ã
        print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤...")
        formats = downloader.get_available_formats(test_url)
        
        if not formats:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(formats)} —Ñ–æ—Ä–º–∞—Ç–æ–≤")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–æ—Ä–º–∞—Ç–æ–≤
        print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤:")
        
        # –ë–µ—Ä–µ–º –ø–æ –æ–¥–Ω–æ–º—É –ø—Ä–∏–º–µ—Ä—É –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
        video_with_audio = [f for f in formats if f['has_audio']]
        video_only = [f for f in formats if f['is_video_only']]
        audio_only = [f for f in formats if f['is_audio_only']]
        
        test_formats = []
        if video_with_audio:
            test_formats.append(("Video+Audio", video_with_audio[0]))
        if video_only:
            test_formats.append(("Video Only", video_only[0]))
        if audio_only:
            test_formats.append(("Audio Only", audio_only[0]))
        
        for format_type, fmt in test_formats:
            print(f"\n   {format_type}:")
            print(f"   ID: {fmt['id']}")
            print(f"   –ö–∞—á–µ—Å—Ç–≤–æ: {fmt['quality']}")
            print(f"   –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ: {fmt['extension']}")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä
            size = downloader.get_format_size(test_url, fmt['id'])
            print(f"   üìä –†–∞–∑–º–µ—Ä: {size}")
        
        print("\nüéâ –¢–µ—Å—Ç —Ä–∞–∑–º–µ—Ä–æ–≤ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_size_display()
    sys.exit(0 if success else 1)
