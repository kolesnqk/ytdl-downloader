#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import sys
import subprocess

def check_package(package_name, import_name=None):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞"""
    if import_name is None:
        import_name = package_name
    
    try:
        __import__(import_name)
        print(f"‚úÖ {package_name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except ImportError:
        print(f"‚ùå {package_name} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False

def check_ytdlp():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ yt-dlp"""
    try:
        result = subprocess.run(['yt-dlp', '--version'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print(f"‚úÖ yt-dlp —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: {result.stdout.strip()})")
            return True
    except (subprocess.TimeoutExpired, FileNotFoundError):
        pass
    
    try:
        result = subprocess.run([sys.executable, '-m', 'yt_dlp', '--version'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print(f"‚úÖ yt-dlp —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –º–æ–¥—É–ª—å (–≤–µ—Ä—Å–∏—è: {result.stdout.strip()})")
            return True
    except (subprocess.TimeoutExpired, FileNotFoundError):
        pass
    
    print("‚ùå yt-dlp –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return False

def check_ffmpeg():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ FFmpeg"""
    try:
        result = subprocess.run(['ffmpeg', '-version'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            version_line = result.stdout.split('\n')[0]
            print(f"‚úÖ FFmpeg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {version_line}")
            return True
    except (subprocess.TimeoutExpired, FileNotFoundError):
        pass
    
    print("‚ùå FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return False

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤–µ—Ä—Å–∏—é
    python_version = sys.version_info
    print(f"Python –≤–µ—Ä—Å–∏—è: {python_version.major}.{python_version.minor}.{python_version.micro}")
    
    if python_version < (3, 6):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.6 –∏–ª–∏ –≤—ã—à–µ")
        return False
    else:
        print("‚úÖ –í–µ—Ä—Å–∏—è Python –ø–æ–¥—Ö–æ–¥–∏—Ç")
    
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PyQt5
    pyqt5_ok = check_package("PyQt5", "PyQt5.QtWidgets")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º yt-dlp
    ytdlp_ok = check_ytdlp()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º FFmpeg
    ffmpeg_ok = check_ffmpeg()
    
    print("\n" + "=" * 50)
    
    if pyqt5_ok and ytdlp_ok and ffmpeg_ok:
        print("üéâ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
        print("‚úÖ yt-dlp –∏ FFmpeg –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ")
        print("‚úÖ Video-only —Ñ–æ—Ä–º–∞—Ç—ã –±—É–¥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—ä–µ–¥–∏–Ω—è—Ç—å—Å—è")
    elif pyqt5_ok and ytdlp_ok:
        print("‚ö†Ô∏è  yt-dlp –≥–æ—Ç–æ–≤, –Ω–æ FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("‚ö†Ô∏è  Video-only —Ñ–æ—Ä–º–∞—Ç—ã –º–æ–≥—É—Ç –Ω–µ –æ–±—ä–µ–¥–∏–Ω—è—Ç—å—Å—è")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
        print("\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("  pip install -r requirements.txt")
        print("  –ò —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FFmpeg –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è video-only —Ñ–æ—Ä–º–∞—Ç–æ–≤")
        return False
    
    print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
    print("  python main.py")
    print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏:")
    print("  python youtube_downloader.py")
    
    return True

if __name__ == "__main__":
    main()
