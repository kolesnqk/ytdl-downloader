#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä—É—á–Ω–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import YouTubeDownloader

def test_manual_merge():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä—É—á–Ω–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä—É—á–Ω–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è...")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
        downloader = YouTubeDownloader()
        print("‚úÖ YouTubeDownloader —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ (–∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ)
        test_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
        print(f"üìé –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: {test_url}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—ã
        print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤...")
        formats = downloader.get_available_formats(test_url)
        
        if not formats:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(formats)} —Ñ–æ—Ä–º–∞—Ç–æ–≤")
        
        # –ò—â–µ–º video-only –∏ audio-only —Ñ–æ—Ä–º–∞—Ç—ã
        video_only_formats = [f for f in formats if f['is_video_only']]
        audio_only_formats = [f for f in formats if f['is_audio_only']]
        
        if not video_only_formats or not audio_only_formats:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω—É–∂–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤")
            print(f"   Video-only: {len(video_only_formats)}")
            print(f"   Audio-only: {len(audio_only_formats)}")
            return False
        
        # –í—ã–±–∏—Ä–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—ã
        video_format = video_only_formats[0]
        audio_format = audio_only_formats[0]
        
        print(f"\n2. –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:")
        print(f"   –í–∏–¥–µ–æ: {video_format['id']} - {video_format['quality']} - {video_format['extension']}")
        print(f"   –ê—É–¥–∏–æ: {audio_format['id']} - {audio_format['quality']} - {audio_format['extension']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—á–Ω–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ
        print(f"\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä—É—á–Ω–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É
        test_dir = "test_merge_output"
        os.makedirs(test_dir, exist_ok=True)
        
        try:
            result = downloader._download_and_merge_manually(
                test_url, 
                video_format['id'], 
                audio_format['id'], 
                test_dir
            )
            
            if result['success']:
                print(f"‚úÖ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
                print(f"   –§–∞–π–ª: {result['final_file']}")
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                if os.path.exists(result['final_file']):
                    file_size = os.path.getsize(result['final_file'])
                    print(f"   –†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è: {result['message']}")
                return False
                
        finally:
            # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É
            import shutil
            if os.path.exists(test_dir):
                shutil.rmtree(test_dir)
                print(f"   –¢–µ—Å—Ç–æ–≤–∞—è –ø–∞–ø–∫–∞ {test_dir} —É–¥–∞–ª–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_manual_merge()
    sys.exit(0 if success else 1)
