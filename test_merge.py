#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import YouTubeDownloader

def test_merge():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ...")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
        downloader = YouTubeDownloader()
        print("‚úÖ YouTubeDownloader —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞
        test_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
        print(f"üìé –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: {test_url}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—ã
        print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤...")
        formats = downloader.get_available_formats(test_url)
        
        if not formats:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(formats)} —Ñ–æ—Ä–º–∞—Ç–æ–≤")
        
        # –ò—â–µ–º video-only —Ñ–æ—Ä–º–∞—Ç
        video_only_formats = [f for f in formats if f['is_video_only']]
        audio_only_formats = [f for f in formats if f['is_audio_only']]
        
        if not video_only_formats:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ video-only —Ñ–æ—Ä–º–∞—Ç–æ–≤")
            return False
        
        if not audio_only_formats:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ audio-only —Ñ–æ—Ä–º–∞—Ç–æ–≤")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(video_only_formats)} video-only —Ñ–æ—Ä–º–∞—Ç–æ–≤")
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(audio_only_formats)} audio-only —Ñ–æ—Ä–º–∞—Ç–æ–≤")
        
        # –í—ã–±–∏—Ä–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
        video_format = video_only_formats[0]
        audio_format = audio_only_formats[0]
        
        print(f"\n2. –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:")
        print(f"   –í–∏–¥–µ–æ: {video_format['id']} - {video_format['quality']} - {video_format['extension']}")
        print(f"   –ê—É–¥–∏–æ: {audio_format['id']} - {audio_format['quality']} - {audio_format['extension']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è)
        print(f"\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è...")
        
        # –°—Ç—Ä–æ–∏–º –∫–æ–º–∞–Ω–¥—É –∫–∞–∫ –≤ –∫–æ–¥–µ
        cmd = [
            'yt-dlp',
            '--format', f"{video_format['id']}+{audio_format['id']}",
            '--output', 'test_output.%(ext)s',
            '--merge-output-format', 'mp4',
            '--no-playlist',
            test_url
        ]
        
        print(f"   –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
        print("   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        print(f"\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
        print(f"   –í–∏–¥–µ–æ –∫–æ–º–∞–Ω–¥–∞: yt-dlp --format {video_format['id']} --output temp_video.%(ext)s {test_url}")
        print(f"   –ê—É–¥–∏–æ –∫–æ–º–∞–Ω–¥–∞: yt-dlp --format {audio_format['id']} --output temp_audio.%(ext)s {test_url}")
        print(f"   FFmpeg –∫–æ–º–∞–Ω–¥–∞: ffmpeg -i temp_video.* -i temp_audio.* -c:v copy -c:a aac -y output.mp4")
        print("   ‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –≥–æ—Ç–æ–≤")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ video-only —Ñ–æ—Ä–º–∞—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_merge()
    sys.exit(0 if success else 1)
