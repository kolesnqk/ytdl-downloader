#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import YouTubeDownloader

def test_download_logic():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è...")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
        downloader = YouTubeDownloader()
        print("‚úÖ YouTubeDownloader —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞
        test_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
        print(f"üìé –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: {test_url}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—ã
        print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤...")
        formats = downloader.get_available_formats(test_url)
        
        if not formats:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(formats)} —Ñ–æ—Ä–º–∞—Ç–æ–≤")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤
        video_with_audio = [f for f in formats if f['has_audio']]
        video_only = [f for f in formats if f['is_video_only']]
        audio_only = [f for f in formats if f['is_audio_only']]
        
        print(f"   üé¨ Video+Audio: {len(video_with_audio)}")
        print(f"   üé• Video Only: {len(video_only)}")
        print(f"   üéµ Audio Only: {len(audio_only)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
        print("\n2. –ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤:")
        
        if video_with_audio:
            example = video_with_audio[0]
            print(f"   üé¨ Video+Audio: {example['id']} - {example['quality']} - {example['extension']}")
        
        if video_only:
            example = video_only[0]
            print(f"   üé• Video Only: {example['id']} - {example['quality']} - {example['extension']}")
        
        if audio_only:
            example = audio_only[0]
            print(f"   üéµ Audio Only: {example['id']} - {example['quality']} - {example['extension']}")
        
        print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –≤—ã–±–æ—Ä–∞...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞
        if video_with_audio:
            test_format = video_with_audio[0]
            print(f"   –¢–µ—Å—Ç Video+Audio —Ñ–æ—Ä–º–∞—Ç–∞: {test_format['id']}")
            # –ù–µ —Å–∫–∞—á–∏–≤–∞–µ–º, —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É
            print("   ‚úÖ –õ–æ–≥–∏–∫–∞: –°–∫–∞—á–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é")
        
        if video_only:
            test_format = video_only[0]
            print(f"   –¢–µ—Å—Ç Video Only —Ñ–æ—Ä–º–∞—Ç–∞: {test_format['id']}")
            print("   ‚úÖ –õ–æ–≥–∏–∫–∞: –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ + –ª—É—á—à–∏–π –∞—É–¥–∏–æ + –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å")
        
        if audio_only:
            test_format = audio_only[0]
            print(f"   –¢–µ—Å—Ç Audio Only —Ñ–æ—Ä–º–∞—Ç–∞: {test_format['id']}")
            print("   ‚úÖ –õ–æ–≥–∏–∫–∞: –°–∫–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ª–æ–≥–∏–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_download_logic()
    sys.exit(0 if success else 1)
