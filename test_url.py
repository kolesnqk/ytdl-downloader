#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Å—ã–ª–∫–∏
"""

import subprocess
import sys
import json

def test_url(url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Å—ã–ª–∫–∏"""
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏: {url}")
    print("=" * 60)
    
    try:
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ...")
        cmd = [
            'yt-dlp',
            '--dump-json',
            '--no-download',
            '--socket-timeout', '30',
            '--retries', '3',
            '--fragment-retries', '3',
            url
        ]
        
        print(f"   –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
        result = subprocess.run(cmd, capture_output=True, text=True, timeout=60)
        
        if result.returncode == 0:
            video_info = json.loads(result.stdout)
            print(f"   ‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: {video_info.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   ‚úÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {video_info.get('duration', 0)} —Å–µ–∫")
            print(f"   ‚úÖ –ó–∞–≥—Ä—É–∑—á–∏–∫: {video_info.get('extractor', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {result.stderr}")
            return False
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤
        print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤...")
        cmd = [
            'yt-dlp',
            '--list-formats',
            '--socket-timeout', '30',
            '--retries', '3',
            '--fragment-retries', '3',
            url
        ]
        
        result = subprocess.run(cmd, capture_output=True, text=True, timeout=60)
        
        if result.returncode == 0:
            lines = result.stdout.split('\n')
            format_count = sum(1 for line in lines if line.strip() and line[0].isdigit())
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤: {format_count}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤
            print("   –ü–µ—Ä–≤—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:")
            for i, line in enumerate(lines[:10]):
                if line.strip() and line[0].isdigit():
                    print(f"     {line}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {result.stderr}")
            return False
        
        print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except subprocess.TimeoutExpired:
        print("   ‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
        return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    if len(sys.argv) > 1:
        url = sys.argv[1]
    else:
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏
        test_urls = [
            "https://www.youtube.com/watch?v=dQw4w9WgXcQ",  # Rick Roll
            "https://www.youtube.com/watch?v=jNQXAC9IVRw",  # Me at the zoo
            "https://www.youtube.com/watch?v=9bZkp7q19f0",  # PSY - GANGNAM STYLE
        ]
        
        print("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Å—ã–ª–∫—É:")
        for i, url in enumerate(test_urls, 1):
            print(f"{i}. {url}")
        
        try:
            choice = int(input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ")) - 1
            if 0 <= choice < len(test_urls):
                url = test_urls[choice]
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
                return
        except (ValueError, KeyboardInterrupt):
            print("–û—Ç–º–µ–Ω–∞")
            return
    
    test_url(url)

if __name__ == "__main__":
    main()
